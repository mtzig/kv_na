tensor(4.2783, device='cuda:0')
tensor(4.2833, device='cuda:0')
tensor(4.2864, device='cuda:0')
tensor(4.2891, device='cuda:0')
tensor(4.2893, device='cuda:0')
tensor(4.2905, device='cuda:0')
tensor(4.2931, device='cuda:0')
tensor(4.2895, device='cuda:0')
tensor(4.2833, device='cuda:0')
tensor(4.2898, device='cuda:0')
tensor(4.2973, device='cuda:0')
Traceback (most recent call last):
  File "/home/tzeng/repos/kv_na/train.py", line 265, in <module>
    losses = estimate_loss()
             ^^^^^^^^^^^^^^^
  File "/home/tzeng/anaconda3/lib/python3.12/site-packages/torch/utils/_contextlib.py", line 116, in decorate_context
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/tzeng/repos/kv_na/train.py", line 224, in estimate_loss
    logits, loss = model(X, Y)
                   ^^^^^^^^^^^
  File "/home/tzeng/anaconda3/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1751, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/tzeng/anaconda3/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1762, in _call_impl
    return forward_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/tzeng/repos/kv_na/model.py", line 218, in forward
    step_logits = self.lm_head(x[:, [-1], :])        # (b, 1, vocab_size)
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/tzeng/anaconda3/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1747, in _wrapped_call_impl
    def _wrapped_call_impl(self, *args, **kwargs):

KeyboardInterrupt
